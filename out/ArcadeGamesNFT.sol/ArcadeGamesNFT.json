{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MAX_PER_TXN",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_SUPPLY",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MINT_PRICE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseTokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "mintItem",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mintItem",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_baseTokenURI",
          "type": "string"
        }
      ],
      "name": "setBaseURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenIdCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6000600c5560e06040526035608081815290620022d660a039600d90620000279082620001b6565b503480156200003557600080fd5b506040518060400160405280600c81526020016b4172636164652047616d657360a01b815250604051806040016040528060048152602001634152434760e01b8152508160009081620000899190620001b6565b506001620000988282620001b6565b505050620000b5620000af620000bb60201b60201c565b620000bf565b62000282565b3390565b600b80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200013c57607f821691505b6020821081036200015d57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001b157600081815260208120601f850160051c810160208610156200018c5750805b601f850160051c820191505b81811015620001ad5782815560010162000198565b5050505b505050565b81516001600160401b03811115620001d257620001d262000111565b620001ea81620001e3845462000127565b8462000163565b602080601f831160018114620002225760008415620002095750858301515b600019600386901b1c1916600185901b178555620001ad565b600085815260208120601f198616915b82811015620002535788860151825594840194600190910190840162000232565b5085821015620002725787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61204480620002926000396000f3fe6080604052600436106101b75760003560e01c80636352211e116100ec578063b88d4fde1161008a578063d547cfb711610064578063d547cfb71461048a578063e985e9c51461049f578063eb93406b146104e8578063f2fde38b146104f057600080fd5b8063b88d4fde1461042f578063c002d23d1461044f578063c87b56dd1461046a57600080fd5b80638da5cb5b116100c65780638da5cb5b146103c657806395d89b41146103e457806398bdf6f5146103f9578063a22cb4651461040f57600080fd5b80636352211e1461037157806370a0823114610391578063715018a6146103b157600080fd5b80632f745c591161015957806342842e0e1161013357806342842e0e146102fc5780634f6ccce71461031c57806351b96d921461033c57806355f804b31461035157600080fd5b80632f745c59146102bf57806332cb6b0c146102df5780633ccfd60b146102f457600080fd5b8063095ea7b311610195578063095ea7b31461024b57806317fb85941461026d57806318160ddd1461028057806323b872dd1461029f57600080fd5b806301ffc9a7146101bc57806306fdde03146101f1578063081812fc14610213575b600080fd5b3480156101c857600080fd5b506101dc6101d73660046119c9565b610510565b60405190151581526020015b60405180910390f35b3480156101fd57600080fd5b50610206610521565b6040516101e89190611a36565b34801561021f57600080fd5b5061023361022e366004611a49565b6105b3565b6040516001600160a01b0390911681526020016101e8565b34801561025757600080fd5b5061026b610266366004611a7e565b6105da565b005b61026b61027b366004611a49565b6106f4565b34801561028c57600080fd5b506008545b6040519081526020016101e8565b3480156102ab57600080fd5b5061026b6102ba366004611aa8565b61086b565b3480156102cb57600080fd5b506102916102da366004611a7e565b61089c565b3480156102eb57600080fd5b50610291606481565b61026b610932565b34801561030857600080fd5b5061026b610317366004611aa8565b610a13565b34801561032857600080fd5b50610291610337366004611a49565b610a2e565b34801561034857600080fd5b50610291600581565b34801561035d57600080fd5b5061026b61036c366004611b70565b610ac1565b34801561037d57600080fd5b5061023361038c366004611a49565b610ad5565b34801561039d57600080fd5b506102916103ac366004611bb9565b610b35565b3480156103bd57600080fd5b5061026b610bbb565b3480156103d257600080fd5b50600b546001600160a01b0316610233565b3480156103f057600080fd5b50610206610bcf565b34801561040557600080fd5b50610291600c5481565b34801561041b57600080fd5b5061026b61042a366004611bd4565b610bde565b34801561043b57600080fd5b5061026b61044a366004611c10565b610be9565b34801561045b57600080fd5b50610291662386f26fc1000081565b34801561047657600080fd5b50610206610485366004611a49565b610c21565b34801561049657600080fd5b50610206610c2c565b3480156104ab57600080fd5b506101dc6104ba366004611c8c565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b61026b610cba565b3480156104fc57600080fd5b5061026b61050b366004611bb9565b610cc4565b600061051b82610d3d565b92915050565b60606000805461053090611cbf565b80601f016020809104026020016040519081016040528092919081815260200182805461055c90611cbf565b80156105a95780601f1061057e576101008083540402835291602001916105a9565b820191906000526020600020905b81548152906001019060200180831161058c57829003601f168201915b5050505050905090565b60006105be82610d62565b506000908152600460205260409020546001600160a01b031690565b60006105e582610ad5565b9050806001600160a01b0316836001600160a01b0316036106575760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b0382161480610673575061067381336104ba565b6106e55760405162461bcd60e51b815260206004820152603e60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c0000606482015260840161064e565b6106ef8383610dc1565b505050565b610705662386f26fc1000082611d0f565b34101561074b5760405162461bcd60e51b81526020600482015260146024820152734e6f7420656e6f756768204554482073656e742160601b604482015260640161064e565b606461075660085490565b106107b25760405162461bcd60e51b815260206004820152602660248201527f4d6178696d756d20737570706c79206f662031303020686173206265656e2072604482015265195858da195960d21b606482015260840161064e565b60058111156108295760405162461bcd60e51b815260206004820152603860248201527f596f752063616e6e6f74206d696e74206d6f7265207468616e2035204e46547360448201527f20696e20612073696e676c65207472616e73616374696f6e0000000000000000606482015260840161064e565b60005b8181101561086757600c805490600061084483611d2e565b919050555061085533600c54610e2f565b8061085f81611d2e565b91505061082c565b5050565b6108753382610e49565b6108915760405162461bcd60e51b815260040161064e90611d47565b6106ef838383610ec8565b60006108a783610b35565b82106109095760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b606482015260840161064e565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b61093a61106f565b47806109885760405162461bcd60e51b815260206004820152601960248201527f4e6f206574686572206c65667420746f20776974686472617700000000000000604482015260640161064e565b604051600090339047908381818185875af1925050503d80600081146109ca576040519150601f19603f3d011682016040523d82523d6000602084013e6109cf565b606091505b50509050806108675760405162461bcd60e51b815260206004820152601060248201526f2a3930b739b332b9103330b4b632b21760811b604482015260640161064e565b6106ef83838360405180602001604052806000815250610be9565b6000610a3960085490565b8210610a9c5760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b606482015260840161064e565b60088281548110610aaf57610aaf611d95565b90600052602060002001549050919050565b610ac961106f565b600d6108678282611df9565b6000818152600260205260408120546001600160a01b03168061051b5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161064e565b60006001600160a01b038216610b9f5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b606482015260840161064e565b506001600160a01b031660009081526003602052604090205490565b610bc361106f565b610bcd60006110c9565b565b60606001805461053090611cbf565b61086733838361111b565b610bf33383610e49565b610c0f5760405162461bcd60e51b815260040161064e90611d47565b610c1b848484846111e9565b50505050565b606061051b8261121c565b600d8054610c3990611cbf565b80601f0160208091040260200160405190810160405280929190818152602001828054610c6590611cbf565b8015610cb25780601f10610c8757610100808354040283529160200191610cb2565b820191906000526020600020905b815481529060010190602001808311610c9557829003601f168201915b505050505081565b610bcd60016106f4565b610ccc61106f565b6001600160a01b038116610d315760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161064e565b610d3a816110c9565b50565b60006001600160e01b0319821663780e9d6360e01b148061051b575061051b82611317565b6000818152600260205260409020546001600160a01b0316610d3a5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161064e565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610df682610ad5565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b610867828260405180602001604052806000815250611367565b600080610e5583610ad5565b9050806001600160a01b0316846001600160a01b03161480610e9c57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b80610ec05750836001600160a01b0316610eb5846105b3565b6001600160a01b0316145b949350505050565b826001600160a01b0316610edb82610ad5565b6001600160a01b031614610f3f5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b606482015260840161064e565b6001600160a01b038216610fa15760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161064e565b610fac83838361139a565b610fb7600082610dc1565b6001600160a01b0383166000908152600360205260408120805460019290610fe0908490611eb9565b90915550506001600160a01b038216600090815260036020526040812080546001929061100e908490611ecc565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600b546001600160a01b03163314610bcd5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161064e565b600b80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b03160361117c5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161064e565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6111f4848484610ec8565b611200848484846113a5565b610c1b5760405162461bcd60e51b815260040161064e90611edf565b606061122782610d62565b6000828152600a60205260408120805461124090611cbf565b80601f016020809104026020016040519081016040528092919081815260200182805461126c90611cbf565b80156112b95780601f1061128e576101008083540402835291602001916112b9565b820191906000526020600020905b81548152906001019060200180831161129c57829003601f168201915b5050505050905060006112ca6114a6565b905080516000036112dc575092915050565b81511561130e5780826040516020016112f6929190611f31565b60405160208183030381529060405292505050919050565b610ec0846114b5565b60006001600160e01b031982166380ac58cd60e01b148061134857506001600160e01b03198216635b5e139f60e01b145b8061051b57506301ffc9a760e01b6001600160e01b031983161461051b565b611371838361151c565b61137e60008484846113a5565b6106ef5760405162461bcd60e51b815260040161064e90611edf565b6106ef83838361166a565b60006001600160a01b0384163b1561149b57604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906113e9903390899088908890600401611f60565b6020604051808303816000875af1925050508015611424575060408051601f3d908101601f1916820190925261142191810190611f9d565b60015b611481573d808015611452576040519150601f19603f3d011682016040523d82523d6000602084013e611457565b606091505b5080516000036114795760405162461bcd60e51b815260040161064e90611edf565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610ec0565b506001949350505050565b6060600d805461053090611cbf565b60606114c082610d62565b60006114ca6114a6565b905060008151116114ea5760405180602001604052806000815250611515565b806114f484611722565b604051602001611505929190611f31565b6040516020818303038152906040525b9392505050565b6001600160a01b0382166115725760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161064e565b6000818152600260205260409020546001600160a01b0316156115d75760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161064e565b6115e36000838361139a565b6001600160a01b038216600090815260036020526040812080546001929061160c908490611ecc565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160a01b0383166116c5576116c081600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b6116e8565b816001600160a01b0316836001600160a01b0316146116e8576116e88382611823565b6001600160a01b0382166116ff576106ef816118c0565b826001600160a01b0316826001600160a01b0316146106ef576106ef828261196f565b6060816000036117495750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611773578061175d81611d2e565b915061176c9050600a83611fd0565b915061174d565b60008167ffffffffffffffff81111561178e5761178e611ae4565b6040519080825280601f01601f1916602001820160405280156117b8576020820181803683370190505b5090505b8415610ec0576117cd600183611eb9565b91506117da600a86611fe4565b6117e5906030611ecc565b60f81b8183815181106117fa576117fa611d95565b60200101906001600160f81b031916908160001a90535061181c600a86611fd0565b94506117bc565b6000600161183084610b35565b61183a9190611eb9565b60008381526007602052604090205490915080821461188d576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b6008546000906118d290600190611eb9565b600083815260096020526040812054600880549394509092849081106118fa576118fa611d95565b90600052602060002001549050806008838154811061191b5761191b611d95565b600091825260208083209091019290925582815260099091526040808220849055858252812055600880548061195357611953611ff8565b6001900381819060005260206000200160009055905550505050565b600061197a83610b35565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b6001600160e01b031981168114610d3a57600080fd5b6000602082840312156119db57600080fd5b8135611515816119b3565b60005b83811015611a015781810151838201526020016119e9565b50506000910152565b60008151808452611a228160208601602086016119e6565b601f01601f19169290920160200192915050565b6020815260006115156020830184611a0a565b600060208284031215611a5b57600080fd5b5035919050565b80356001600160a01b0381168114611a7957600080fd5b919050565b60008060408385031215611a9157600080fd5b611a9a83611a62565b946020939093013593505050565b600080600060608486031215611abd57600080fd5b611ac684611a62565b9250611ad460208501611a62565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115611b1557611b15611ae4565b604051601f8501601f19908116603f01168101908282118183101715611b3d57611b3d611ae4565b81604052809350858152868686011115611b5657600080fd5b858560208301376000602087830101525050509392505050565b600060208284031215611b8257600080fd5b813567ffffffffffffffff811115611b9957600080fd5b8201601f81018413611baa57600080fd5b610ec084823560208401611afa565b600060208284031215611bcb57600080fd5b61151582611a62565b60008060408385031215611be757600080fd5b611bf083611a62565b915060208301358015158114611c0557600080fd5b809150509250929050565b60008060008060808587031215611c2657600080fd5b611c2f85611a62565b9350611c3d60208601611a62565b925060408501359150606085013567ffffffffffffffff811115611c6057600080fd5b8501601f81018713611c7157600080fd5b611c8087823560208401611afa565b91505092959194509250565b60008060408385031215611c9f57600080fd5b611ca883611a62565b9150611cb660208401611a62565b90509250929050565b600181811c90821680611cd357607f821691505b602082108103611cf357634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615611d2957611d29611cf9565b500290565b600060018201611d4057611d40611cf9565b5060010190565b6020808252602e908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526d1c881b9bdc88185c1c1c9bdd995960921b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b601f8211156106ef57600081815260208120601f850160051c81016020861015611dd25750805b601f850160051c820191505b81811015611df157828155600101611dde565b505050505050565b815167ffffffffffffffff811115611e1357611e13611ae4565b611e2781611e218454611cbf565b84611dab565b602080601f831160018114611e5c5760008415611e445750858301515b600019600386901b1c1916600185901b178555611df1565b600085815260208120601f198616915b82811015611e8b57888601518255948401946001909101908401611e6c565b5085821015611ea95787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b8181038181111561051b5761051b611cf9565b8082018082111561051b5761051b611cf9565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60008351611f438184602088016119e6565b835190830190611f578183602088016119e6565b01949350505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611f9390830184611a0a565b9695505050505050565b600060208284031215611faf57600080fd5b8151611515816119b3565b634e487b7160e01b600052601260045260246000fd5b600082611fdf57611fdf611fba565b500490565b600082611ff357611ff3611fba565b500690565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220ae5eb7e53184044ccb0206b1b713ffb21dd973272b54f4d5d67361770bf081f964736f6c63430008100033697066733a2f2f516d54596e54365a436139476b653669456831517159675862625354344354654b48626f55525a37565955373941",
    "sourceMap": "1055:1:0:-:0;1023:33;;1330:84;872:3726;1330:84;;872:3726;1330:84;;;872:3726;1330:84;;;;;;;;;:::i;:::-;;1775:47;;;;;;;;;;1390:113:8;;;;;;;;;;;;;-1:-1:-1;;;1390:113:8;;;;;;;;;;;;;;;;-1:-1:-1;;;1390:113:8;;;1464:5;1456;:13;;;;;;:::i;:::-;-1:-1:-1;1479:7:8;:17;1489:7;1479;:17;:::i;:::-;;1390:113;;936:32:7;955:12;:10;;;:12;;:::i;:::-;936:18;:32::i;:::-;872:3726:0;;640:96:17;719:10;;640:96::o;2433:187:7:-;2525:6;;;-1:-1:-1;;;;;2541:17:7;;;-1:-1:-1;;;;;;2541:17:7;;;;;;;2573:40;;2525:6;;;2541:17;2525:6;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;14:127:22:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:22;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;748:448;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:22;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:22;;;2580:26;2531:89;-1:-1:-1;;1335:1:22;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:22;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:22;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:22;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:22:o;:::-;872:3726:0;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106101b75760003560e01c80636352211e116100ec578063b88d4fde1161008a578063d547cfb711610064578063d547cfb71461048a578063e985e9c51461049f578063eb93406b146104e8578063f2fde38b146104f057600080fd5b8063b88d4fde1461042f578063c002d23d1461044f578063c87b56dd1461046a57600080fd5b80638da5cb5b116100c65780638da5cb5b146103c657806395d89b41146103e457806398bdf6f5146103f9578063a22cb4651461040f57600080fd5b80636352211e1461037157806370a0823114610391578063715018a6146103b157600080fd5b80632f745c591161015957806342842e0e1161013357806342842e0e146102fc5780634f6ccce71461031c57806351b96d921461033c57806355f804b31461035157600080fd5b80632f745c59146102bf57806332cb6b0c146102df5780633ccfd60b146102f457600080fd5b8063095ea7b311610195578063095ea7b31461024b57806317fb85941461026d57806318160ddd1461028057806323b872dd1461029f57600080fd5b806301ffc9a7146101bc57806306fdde03146101f1578063081812fc14610213575b600080fd5b3480156101c857600080fd5b506101dc6101d73660046119c9565b610510565b60405190151581526020015b60405180910390f35b3480156101fd57600080fd5b50610206610521565b6040516101e89190611a36565b34801561021f57600080fd5b5061023361022e366004611a49565b6105b3565b6040516001600160a01b0390911681526020016101e8565b34801561025757600080fd5b5061026b610266366004611a7e565b6105da565b005b61026b61027b366004611a49565b6106f4565b34801561028c57600080fd5b506008545b6040519081526020016101e8565b3480156102ab57600080fd5b5061026b6102ba366004611aa8565b61086b565b3480156102cb57600080fd5b506102916102da366004611a7e565b61089c565b3480156102eb57600080fd5b50610291606481565b61026b610932565b34801561030857600080fd5b5061026b610317366004611aa8565b610a13565b34801561032857600080fd5b50610291610337366004611a49565b610a2e565b34801561034857600080fd5b50610291600581565b34801561035d57600080fd5b5061026b61036c366004611b70565b610ac1565b34801561037d57600080fd5b5061023361038c366004611a49565b610ad5565b34801561039d57600080fd5b506102916103ac366004611bb9565b610b35565b3480156103bd57600080fd5b5061026b610bbb565b3480156103d257600080fd5b50600b546001600160a01b0316610233565b3480156103f057600080fd5b50610206610bcf565b34801561040557600080fd5b50610291600c5481565b34801561041b57600080fd5b5061026b61042a366004611bd4565b610bde565b34801561043b57600080fd5b5061026b61044a366004611c10565b610be9565b34801561045b57600080fd5b50610291662386f26fc1000081565b34801561047657600080fd5b50610206610485366004611a49565b610c21565b34801561049657600080fd5b50610206610c2c565b3480156104ab57600080fd5b506101dc6104ba366004611c8c565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b61026b610cba565b3480156104fc57600080fd5b5061026b61050b366004611bb9565b610cc4565b600061051b82610d3d565b92915050565b60606000805461053090611cbf565b80601f016020809104026020016040519081016040528092919081815260200182805461055c90611cbf565b80156105a95780601f1061057e576101008083540402835291602001916105a9565b820191906000526020600020905b81548152906001019060200180831161058c57829003601f168201915b5050505050905090565b60006105be82610d62565b506000908152600460205260409020546001600160a01b031690565b60006105e582610ad5565b9050806001600160a01b0316836001600160a01b0316036106575760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b0382161480610673575061067381336104ba565b6106e55760405162461bcd60e51b815260206004820152603e60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c0000606482015260840161064e565b6106ef8383610dc1565b505050565b610705662386f26fc1000082611d0f565b34101561074b5760405162461bcd60e51b81526020600482015260146024820152734e6f7420656e6f756768204554482073656e742160601b604482015260640161064e565b606461075660085490565b106107b25760405162461bcd60e51b815260206004820152602660248201527f4d6178696d756d20737570706c79206f662031303020686173206265656e2072604482015265195858da195960d21b606482015260840161064e565b60058111156108295760405162461bcd60e51b815260206004820152603860248201527f596f752063616e6e6f74206d696e74206d6f7265207468616e2035204e46547360448201527f20696e20612073696e676c65207472616e73616374696f6e0000000000000000606482015260840161064e565b60005b8181101561086757600c805490600061084483611d2e565b919050555061085533600c54610e2f565b8061085f81611d2e565b91505061082c565b5050565b6108753382610e49565b6108915760405162461bcd60e51b815260040161064e90611d47565b6106ef838383610ec8565b60006108a783610b35565b82106109095760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b606482015260840161064e565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b61093a61106f565b47806109885760405162461bcd60e51b815260206004820152601960248201527f4e6f206574686572206c65667420746f20776974686472617700000000000000604482015260640161064e565b604051600090339047908381818185875af1925050503d80600081146109ca576040519150601f19603f3d011682016040523d82523d6000602084013e6109cf565b606091505b50509050806108675760405162461bcd60e51b815260206004820152601060248201526f2a3930b739b332b9103330b4b632b21760811b604482015260640161064e565b6106ef83838360405180602001604052806000815250610be9565b6000610a3960085490565b8210610a9c5760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b606482015260840161064e565b60088281548110610aaf57610aaf611d95565b90600052602060002001549050919050565b610ac961106f565b600d6108678282611df9565b6000818152600260205260408120546001600160a01b03168061051b5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161064e565b60006001600160a01b038216610b9f5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b606482015260840161064e565b506001600160a01b031660009081526003602052604090205490565b610bc361106f565b610bcd60006110c9565b565b60606001805461053090611cbf565b61086733838361111b565b610bf33383610e49565b610c0f5760405162461bcd60e51b815260040161064e90611d47565b610c1b848484846111e9565b50505050565b606061051b8261121c565b600d8054610c3990611cbf565b80601f0160208091040260200160405190810160405280929190818152602001828054610c6590611cbf565b8015610cb25780601f10610c8757610100808354040283529160200191610cb2565b820191906000526020600020905b815481529060010190602001808311610c9557829003601f168201915b505050505081565b610bcd60016106f4565b610ccc61106f565b6001600160a01b038116610d315760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161064e565b610d3a816110c9565b50565b60006001600160e01b0319821663780e9d6360e01b148061051b575061051b82611317565b6000818152600260205260409020546001600160a01b0316610d3a5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161064e565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610df682610ad5565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b610867828260405180602001604052806000815250611367565b600080610e5583610ad5565b9050806001600160a01b0316846001600160a01b03161480610e9c57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b80610ec05750836001600160a01b0316610eb5846105b3565b6001600160a01b0316145b949350505050565b826001600160a01b0316610edb82610ad5565b6001600160a01b031614610f3f5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b606482015260840161064e565b6001600160a01b038216610fa15760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161064e565b610fac83838361139a565b610fb7600082610dc1565b6001600160a01b0383166000908152600360205260408120805460019290610fe0908490611eb9565b90915550506001600160a01b038216600090815260036020526040812080546001929061100e908490611ecc565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600b546001600160a01b03163314610bcd5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161064e565b600b80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b03160361117c5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161064e565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6111f4848484610ec8565b611200848484846113a5565b610c1b5760405162461bcd60e51b815260040161064e90611edf565b606061122782610d62565b6000828152600a60205260408120805461124090611cbf565b80601f016020809104026020016040519081016040528092919081815260200182805461126c90611cbf565b80156112b95780601f1061128e576101008083540402835291602001916112b9565b820191906000526020600020905b81548152906001019060200180831161129c57829003601f168201915b5050505050905060006112ca6114a6565b905080516000036112dc575092915050565b81511561130e5780826040516020016112f6929190611f31565b60405160208183030381529060405292505050919050565b610ec0846114b5565b60006001600160e01b031982166380ac58cd60e01b148061134857506001600160e01b03198216635b5e139f60e01b145b8061051b57506301ffc9a760e01b6001600160e01b031983161461051b565b611371838361151c565b61137e60008484846113a5565b6106ef5760405162461bcd60e51b815260040161064e90611edf565b6106ef83838361166a565b60006001600160a01b0384163b1561149b57604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906113e9903390899088908890600401611f60565b6020604051808303816000875af1925050508015611424575060408051601f3d908101601f1916820190925261142191810190611f9d565b60015b611481573d808015611452576040519150601f19603f3d011682016040523d82523d6000602084013e611457565b606091505b5080516000036114795760405162461bcd60e51b815260040161064e90611edf565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610ec0565b506001949350505050565b6060600d805461053090611cbf565b60606114c082610d62565b60006114ca6114a6565b905060008151116114ea5760405180602001604052806000815250611515565b806114f484611722565b604051602001611505929190611f31565b6040516020818303038152906040525b9392505050565b6001600160a01b0382166115725760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161064e565b6000818152600260205260409020546001600160a01b0316156115d75760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161064e565b6115e36000838361139a565b6001600160a01b038216600090815260036020526040812080546001929061160c908490611ecc565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160a01b0383166116c5576116c081600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b6116e8565b816001600160a01b0316836001600160a01b0316146116e8576116e88382611823565b6001600160a01b0382166116ff576106ef816118c0565b826001600160a01b0316826001600160a01b0316146106ef576106ef828261196f565b6060816000036117495750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611773578061175d81611d2e565b915061176c9050600a83611fd0565b915061174d565b60008167ffffffffffffffff81111561178e5761178e611ae4565b6040519080825280601f01601f1916602001820160405280156117b8576020820181803683370190505b5090505b8415610ec0576117cd600183611eb9565b91506117da600a86611fe4565b6117e5906030611ecc565b60f81b8183815181106117fa576117fa611d95565b60200101906001600160f81b031916908160001a90535061181c600a86611fd0565b94506117bc565b6000600161183084610b35565b61183a9190611eb9565b60008381526007602052604090205490915080821461188d576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b6008546000906118d290600190611eb9565b600083815260096020526040812054600880549394509092849081106118fa576118fa611d95565b90600052602060002001549050806008838154811061191b5761191b611d95565b600091825260208083209091019290925582815260099091526040808220849055858252812055600880548061195357611953611ff8565b6001900381819060005260206000200160009055905550505050565b600061197a83610b35565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b6001600160e01b031981168114610d3a57600080fd5b6000602082840312156119db57600080fd5b8135611515816119b3565b60005b83811015611a015781810151838201526020016119e9565b50506000910152565b60008151808452611a228160208601602086016119e6565b601f01601f19169290920160200192915050565b6020815260006115156020830184611a0a565b600060208284031215611a5b57600080fd5b5035919050565b80356001600160a01b0381168114611a7957600080fd5b919050565b60008060408385031215611a9157600080fd5b611a9a83611a62565b946020939093013593505050565b600080600060608486031215611abd57600080fd5b611ac684611a62565b9250611ad460208501611a62565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115611b1557611b15611ae4565b604051601f8501601f19908116603f01168101908282118183101715611b3d57611b3d611ae4565b81604052809350858152868686011115611b5657600080fd5b858560208301376000602087830101525050509392505050565b600060208284031215611b8257600080fd5b813567ffffffffffffffff811115611b9957600080fd5b8201601f81018413611baa57600080fd5b610ec084823560208401611afa565b600060208284031215611bcb57600080fd5b61151582611a62565b60008060408385031215611be757600080fd5b611bf083611a62565b915060208301358015158114611c0557600080fd5b809150509250929050565b60008060008060808587031215611c2657600080fd5b611c2f85611a62565b9350611c3d60208601611a62565b925060408501359150606085013567ffffffffffffffff811115611c6057600080fd5b8501601f81018713611c7157600080fd5b611c8087823560208401611afa565b91505092959194509250565b60008060408385031215611c9f57600080fd5b611ca883611a62565b9150611cb660208401611a62565b90509250929050565b600181811c90821680611cd357607f821691505b602082108103611cf357634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615611d2957611d29611cf9565b500290565b600060018201611d4057611d40611cf9565b5060010190565b6020808252602e908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526d1c881b9bdc88185c1c1c9bdd995960921b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b601f8211156106ef57600081815260208120601f850160051c81016020861015611dd25750805b601f850160051c820191505b81811015611df157828155600101611dde565b505050505050565b815167ffffffffffffffff811115611e1357611e13611ae4565b611e2781611e218454611cbf565b84611dab565b602080601f831160018114611e5c5760008415611e445750858301515b600019600386901b1c1916600185901b178555611df1565b600085815260208120601f198616915b82811015611e8b57888601518255948401946001909101908401611e6c565b5085821015611ea95787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b8181038181111561051b5761051b611cf9565b8082018082111561051b5761051b611cf9565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60008351611f438184602088016119e6565b835190830190611f578183602088016119e6565b01949350505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611f9390830184611a0a565b9695505050505050565b600060208284031215611faf57600080fd5b8151611515816119b3565b634e487b7160e01b600052601260045260246000fd5b600082611fdf57611fdf611fba565b500490565b600082611ff357611ff3611fba565b500690565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220ae5eb7e53184044ccb0206b1b713ffb21dd973272b54f4d5d67361770bf081f964736f6c63430008100033",
    "sourceMap": "872:3726:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4391:205;;;;;;;;;;-1:-1:-1;4391:205:0;;;;;:::i;:::-;;:::i;:::-;;;565:14:22;;558:22;540:41;;528:2;513:18;4391:205:0;;;;;;;;2470:98:8;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;3935:167::-;;;;;;;;;;-1:-1:-1;3935:167:8;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1697:32:22;;;1679:51;;1667:2;1652:18;3935:167:8;1533:203:22;3467:407:8;;;;;;;;;;-1:-1:-1;3467:407:8;;;;;:::i;:::-;;:::i;:::-;;2302:457:0;;;;;;:::i;:::-;;:::i;1615:111:11:-;;;;;;;;;;-1:-1:-1;1702:10:11;:17;1615:111;;;2324:25:22;;;2312:2;2297:18;1615:111:11;2178:177:22;4612:327:8;;;;;;;;;;-1:-1:-1;4612:327:8;;;;;:::i;:::-;;:::i;1291:253:11:-;;;;;;;;;;-1:-1:-1;1291:253:11;;;;;:::i;:::-;;:::i;1173:40:0:-;;;;;;;;;;;;1210:3;1173:40;;2875:313;;;:::i;5005:179:8:-;;;;;;;;;;-1:-1:-1;5005:179:8;;;;;:::i;:::-;;:::i;1798:230:11:-;;;;;;;;;;-1:-1:-1;1798:230:11;;;;;:::i;:::-;;:::i;1236:39:0:-;;;;;;;;;;;;1274:1;1236:39;;3298:111;;;;;;;;;;-1:-1:-1;3298:111:0;;;;;:::i;:::-;;:::i;2190:218:8:-;;;;;;;;;;-1:-1:-1;2190:218:8;;;;;:::i;:::-;;:::i;1929:204::-;;;;;;;;;;-1:-1:-1;1929:204:8;;;;;:::i;:::-;;:::i;1831:101:7:-;;;;;;;;;;;;;:::i;1201:85::-;;;;;;;;;;-1:-1:-1;1273:6:7;;-1:-1:-1;;;;;1273:6:7;1201:85;;2632:102:8;;;;;;;;;;;;;:::i;1023:33:0:-;;;;;;;;;;;;;;;;4169:153:8;;;;;;;;;;-1:-1:-1;4169:153:8;;;;;:::i;:::-;;:::i;5250:315::-;;;;;;;;;;-1:-1:-1;5250:315:8;;;;;:::i;:::-;;:::i;1107:47:0:-;;;;;;;;;;;;1144:10;1107:47;;4134:189;;;;;;;;;;-1:-1:-1;4134:189:0;;;;;:::i;:::-;;:::i;1330:84::-;;;;;;;;;;;;;:::i;4388:162:8:-;;;;;;;;;;-1:-1:-1;4388:162:8;;;;;:::i;:::-;-1:-1:-1;;;;;4508:25:8;;;4485:4;4508:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4388:162;1943:63:0;;;:::i;2081:198:7:-;;;;;;;;;;-1:-1:-1;2081:198:7;;;;;:::i;:::-;;:::i;4391:205:0:-;4526:4;4553:36;4577:11;4553:23;:36::i;:::-;4546:43;4391:205;-1:-1:-1;;4391:205:0:o;2470:98:8:-;2524:13;2556:5;2549:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2470:98;:::o;3935:167::-;4011:7;4030:23;4045:7;4030:14;:23::i;:::-;-1:-1:-1;4071:24:8;;;;:15;:24;;;;;;-1:-1:-1;;;;;4071:24:8;;3935:167::o;3467:407::-;3547:13;3563:23;3578:7;3563:14;:23::i;:::-;3547:39;;3610:5;-1:-1:-1;;;;;3604:11:8;:2;-1:-1:-1;;;;;3604:11:8;;3596:57;;;;-1:-1:-1;;;3596:57:8;;5985:2:22;3596:57:8;;;5967:21:22;6024:2;6004:18;;;5997:30;6063:34;6043:18;;;6036:62;-1:-1:-1;;;6114:18:22;;;6107:31;6155:19;;3596:57:8;;;;;;;;;719:10:17;-1:-1:-1;;;;;3685:21:8;;;;:62;;-1:-1:-1;3710:37:8;3727:5;719:10:17;4388:162:8;:::i;3710:37::-;3664:171;;;;-1:-1:-1;;;3664:171:8;;6387:2:22;3664:171:8;;;6369:21:22;6426:2;6406:18;;;6399:30;6465:34;6445:18;;;6438:62;6536:32;6516:18;;;6509:60;6586:19;;3664:171:8;6185:426:22;3664:171:8;3846:21;3855:2;3859:7;3846:8;:21::i;:::-;3537:337;3467:407;;:::o;2302:457:0:-;2383:20;1144:10;2383:7;:20;:::i;:::-;2370:9;:33;;2362:66;;;;-1:-1:-1;;;2362:66:0;;7123:2:22;2362:66:0;;;7105:21:22;7162:2;7142:18;;;7135:30;-1:-1:-1;;;7181:18:22;;;7174:50;7241:18;;2362:66:0;6921:344:22;2362:66:0;1210:3;2446:13;1702:10:11;:17;;1615:111;2446:13:0;:26;2438:77;;;;-1:-1:-1;;;2438:77:0;;7472:2:22;2438:77:0;;;7454:21:22;7511:2;7491:18;;;7484:30;7550:34;7530:18;;;7523:62;-1:-1:-1;;;7601:18:22;;;7594:36;7647:19;;2438:77:0;7270:402:22;2438:77:0;1274:1;2533:7;:22;;2525:91;;;;-1:-1:-1;;;2525:91:0;;7879:2:22;2525:91:0;;;7861:21:22;7918:2;7898:18;;;7891:30;7957:34;7937:18;;;7930:62;8028:26;8008:18;;;8001:54;8072:19;;2525:91:0;7677:420:22;2525:91:0;2631:9;2627:126;2648:7;2644:1;:11;2627:126;;;2675:14;:16;;;:14;:16;;;:::i;:::-;;;;;;2705:37;2715:10;2727:14;;2705:9;:37::i;:::-;2657:3;;;;:::i;:::-;;;;2627:126;;;;2302:457;:::o;4612:327:8:-;4801:41;719:10:17;4834:7:8;4801:18;:41::i;:::-;4793:100;;;;-1:-1:-1;;;4793:100:8;;;;;;;:::i;:::-;4904:28;4914:4;4920:2;4924:7;4904:9;:28::i;1291:253:11:-;1388:7;1423:23;1440:5;1423:16;:23::i;:::-;1415:5;:31;1407:87;;;;-1:-1:-1;;;1407:87:11;;8859:2:22;1407:87:11;;;8841:21:22;8898:2;8878:18;;;8871:30;8937:34;8917:18;;;8910:62;-1:-1:-1;;;8988:18:22;;;8981:41;9039:19;;1407:87:11;8657:407:22;1407:87:11;-1:-1:-1;;;;;;1511:19:11;;;;;;;;:12;:19;;;;;;;;:26;;;;;;;;;1291:253::o;2875:313:0:-;1094:13:7;:11;:13::i;:::-;2973:21:0::1;3012:11:::0;3004:49:::1;;;::::0;-1:-1:-1;;;3004:49:0;;9271:2:22;3004:49:0::1;::::0;::::1;9253:21:22::0;9310:2;9290:18;;;9283:30;9349:27;9329:18;;;9322:55;9394:18;;3004:49:0::1;9069:349:22::0;3004:49:0::1;3080:58;::::0;3065:9:::1;::::0;3088:10:::1;::::0;3112:21:::1;::::0;3065:9;3080:58;3065:9;3080:58;3112:21;3088:10;3080:58:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3064:74;;;3156:4;3148:33;;;::::0;-1:-1:-1;;;3148:33:0;;9835:2:22;3148:33:0::1;::::0;::::1;9817:21:22::0;9874:2;9854:18;;;9847:30;-1:-1:-1;;;9893:18:22;;;9886:46;9949:18;;3148:33:0::1;9633:340:22::0;5005:179:8;5138:39;5155:4;5161:2;5165:7;5138:39;;;;;;;;;;;;:16;:39::i;1798:230:11:-;1873:7;1908:30;1702:10;:17;;1615:111;1908:30;1900:5;:38;1892:95;;;;-1:-1:-1;;;1892:95:11;;10180:2:22;1892:95:11;;;10162:21:22;10219:2;10199:18;;;10192:30;10258:34;10238:18;;;10231:62;-1:-1:-1;;;10309:18:22;;;10302:42;10361:19;;1892:95:11;9978:408:22;1892:95:11;2004:10;2015:5;2004:17;;;;;;;;:::i;:::-;;;;;;;;;1997:24;;1798:230;;;:::o;3298:111:0:-;1094:13:7;:11;:13::i;:::-;3374:12:0::1;:28;3389:13:::0;3374:12;:28:::1;:::i;2190:218:8:-:0;2262:7;2297:16;;;:7;:16;;;;;;-1:-1:-1;;;;;2297:16:8;;2323:56;;;;-1:-1:-1;;;2323:56:8;;12929:2:22;2323:56:8;;;12911:21:22;12968:2;12948:18;;;12941:30;-1:-1:-1;;;12987:18:22;;;12980:54;13051:18;;2323:56:8;12727:348:22;1929:204:8;2001:7;-1:-1:-1;;;;;2028:19:8;;2020:73;;;;-1:-1:-1;;;2020:73:8;;13282:2:22;2020:73:8;;;13264:21:22;13321:2;13301:18;;;13294:30;13360:34;13340:18;;;13333:62;-1:-1:-1;;;13411:18:22;;;13404:39;13460:19;;2020:73:8;13080:405:22;2020:73:8;-1:-1:-1;;;;;;2110:16:8;;;;;:9;:16;;;;;;;1929:204::o;1831:101:7:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;2632:102:8:-;2688:13;2720:7;2713:14;;;;;:::i;4169:153::-;4263:52;719:10:17;4296:8:8;4306;4263:18;:52::i;5250:315::-;5418:41;719:10:17;5451:7:8;5418:18;:41::i;:::-;5410:100;;;;-1:-1:-1;;;5410:100:8;;;;;;;:::i;:::-;5520:38;5534:4;5540:2;5544:7;5553:4;5520:13;:38::i;:::-;5250:315;;;;:::o;4134:189:0:-;4257:13;4293:23;4308:7;4293:14;:23::i;1330:84::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1943:63::-;1988:11;1997:1;1988:8;:11::i;2081:198:7:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:7;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:7;;13692:2:22;2161:73:7::1;::::0;::::1;13674:21:22::0;13731:2;13711:18;;;13704:30;13770:34;13750:18;;;13743:62;-1:-1:-1;;;13821:18:22;;;13814:36;13867:19;;2161:73:7::1;13490:402:22::0;2161:73:7::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;990:222:11:-;1092:4;-1:-1:-1;;;;;;1115:50:11;;-1:-1:-1;;;1115:50:11;;:90;;;1169:36;1193:11;1169:23;:36::i;11657:133:8:-;7099:4;7122:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7122:16:8;11730:53;;;;-1:-1:-1;;;11730:53:8;;12929:2:22;11730:53:8;;;12911:21:22;12968:2;12948:18;;;12941:30;-1:-1:-1;;;12987:18:22;;;12980:54;13051:18;;11730:53:8;12727:348:22;10959:171:8;11033:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;11033:29:8;-1:-1:-1;;;;;11033:29:8;;;;;;;;:24;;11086:23;11033:24;11086:14;:23::i;:::-;-1:-1:-1;;;;;11077:46:8;;;;;;;;;;;10959:171;;:::o;7908:108::-;7983:26;7993:2;7997:7;7983:26;;;;;;;;;;;;:9;:26::i;7317:261::-;7410:4;7426:13;7442:23;7457:7;7442:14;:23::i;:::-;7426:39;;7494:5;-1:-1:-1;;;;;7483:16:8;:7;-1:-1:-1;;;;;7483:16:8;;:52;;;-1:-1:-1;;;;;;4508:25:8;;;4485:4;4508:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;7503:32;7483:87;;;;7563:7;-1:-1:-1;;;;;7539:31:8;:20;7551:7;7539:11;:20::i;:::-;-1:-1:-1;;;;;7539:31:8;;7483:87;7475:96;7317:261;-1:-1:-1;;;;7317:261:8:o;10242:605::-;10396:4;-1:-1:-1;;;;;10369:31:8;:23;10384:7;10369:14;:23::i;:::-;-1:-1:-1;;;;;10369:31:8;;10361:81;;;;-1:-1:-1;;;10361:81:8;;14099:2:22;10361:81:8;;;14081:21:22;14138:2;14118:18;;;14111:30;14177:34;14157:18;;;14150:62;-1:-1:-1;;;14228:18:22;;;14221:35;14273:19;;10361:81:8;13897:401:22;10361:81:8;-1:-1:-1;;;;;10460:16:8;;10452:65;;;;-1:-1:-1;;;10452:65:8;;14505:2:22;10452:65:8;;;14487:21:22;14544:2;14524:18;;;14517:30;14583:34;14563:18;;;14556:62;-1:-1:-1;;;14634:18:22;;;14627:34;14678:19;;10452:65:8;14303:400:22;10452:65:8;10528:39;10549:4;10555:2;10559:7;10528:20;:39::i;:::-;10629:29;10646:1;10650:7;10629:8;:29::i;:::-;-1:-1:-1;;;;;10669:15:8;;;;;;:9;:15;;;;;:20;;10688:1;;10669:15;:20;;10688:1;;10669:20;:::i;:::-;;;;-1:-1:-1;;;;;;;10699:13:8;;;;;;:9;:13;;;;;:18;;10716:1;;10699:13;:18;;10716:1;;10699:18;:::i;:::-;;;;-1:-1:-1;;10727:16:8;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;10727:21:8;-1:-1:-1;;;;;10727:21:8;;;;;;;;;10764:27;;10727:16;;10764:27;;;;;;;3537:337;3467:407;;:::o;1359:130:7:-;1273:6;;-1:-1:-1;;;;;1273:6:7;719:10:17;1422:23:7;1414:68;;;;-1:-1:-1;;;1414:68:7;;15173:2:22;1414:68:7;;;15155:21:22;;;15192:18;;;15185:30;15251:34;15231:18;;;15224:62;15303:18;;1414:68:7;14971:356:22;2433:187:7;2525:6;;;-1:-1:-1;;;;;2541:17:7;;;-1:-1:-1;;;;;;2541:17:7;;;;;;;2573:40;;2525:6;;;2541:17;2525:6;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;11266:307:8:-;11416:8;-1:-1:-1;;;;;11407:17:8;:5;-1:-1:-1;;;;;11407:17:8;;11399:55;;;;-1:-1:-1;;;11399:55:8;;15534:2:22;11399:55:8;;;15516:21:22;15573:2;15553:18;;;15546:30;15612:27;15592:18;;;15585:55;15657:18;;11399:55:8;15332:349:22;11399:55:8;-1:-1:-1;;;;;11464:25:8;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;11464:46:8;;;;;;;;;;11525:41;;540::22;;;11525::8;;513:18:22;11525:41:8;;;;;;;11266:307;;;:::o;6426:305::-;6576:28;6586:4;6592:2;6596:7;6576:9;:28::i;:::-;6622:47;6645:4;6651:2;6655:7;6664:4;6622:22;:47::i;:::-;6614:110;;;;-1:-1:-1;;;6614:110:8;;;;;;;:::i;482:608:12:-;555:13;580:23;595:7;580:14;:23::i;:::-;614;640:19;;;:10;:19;;;;;614:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;669:18;690:10;:8;:10::i;:::-;669:31;;779:4;773:18;795:1;773:23;769:70;;-1:-1:-1;819:9:12;482:608;-1:-1:-1;;482:608:12:o;769:70::-;941:23;;:27;937:106;;1015:4;1021:9;998:33;;;;;;;;;:::i;:::-;;;;;;;;;;;;;984:48;;;;482:608;;;:::o;937:106::-;1060:23;1075:7;1060:14;:23::i;1570:300:8:-;1672:4;-1:-1:-1;;;;;;1707:40:8;;-1:-1:-1;;;1707:40:8;;:104;;-1:-1:-1;;;;;;;1763:48:8;;-1:-1:-1;;;1763:48:8;1707:104;:156;;;-1:-1:-1;;;;;;;;;;937:40:19;;;1827:36:8;829:155:19;8237:309:8;8361:18;8367:2;8371:7;8361:5;:18::i;:::-;8410:53;8441:1;8445:2;8449:7;8458:4;8410:22;:53::i;:::-;8389:150;;;;-1:-1:-1;;;8389:150:8;;;;;;;:::i;3656:209:0:-;3813:45;3840:4;3846:2;3850:7;3813:26;:45::i;12342:831:8:-;12491:4;-1:-1:-1;;;;;12511:13:8;;1465:19:16;:23;12507:660:8;;12546:71;;-1:-1:-1;;;12546:71:8;;-1:-1:-1;;;;;12546:36:8;;;;;:71;;719:10:17;;12597:4:8;;12603:7;;12612:4;;12546:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12546:71:8;;;;;;;;-1:-1:-1;;12546:71:8;;;;;;;;;;;;:::i;:::-;;;12542:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12784:6;:13;12801:1;12784:18;12780:321;;12826:60;;-1:-1:-1;;;12826:60:8;;;;;;;:::i;12780:321::-;13053:6;13047:13;13038:6;13034:2;13030:15;13023:38;12542:573;-1:-1:-1;;;;;;12667:51:8;-1:-1:-1;;;12667:51:8;;-1:-1:-1;12660:58:8;;12507:660;-1:-1:-1;13152:4:8;12342:831;;;;;;:::o;3477:111:0:-;3537:13;3569:12;3562:19;;;;;:::i;2800:276:8:-;2873:13;2898:23;2913:7;2898:14;:23::i;:::-;2932:21;2956:10;:8;:10::i;:::-;2932:34;;3007:1;2989:7;2983:21;:25;:86;;;;;;;;;;;;;;;;;3035:7;3044:18;:7;:16;:18::i;:::-;3018:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2983:86;2976:93;2800:276;-1:-1:-1;;;2800:276:8:o;8868:427::-;-1:-1:-1;;;;;8947:16:8;;8939:61;;;;-1:-1:-1;;;8939:61:8;;17556:2:22;8939:61:8;;;17538:21:22;;;17575:18;;;17568:30;17634:34;17614:18;;;17607:62;17686:18;;8939:61:8;17354:356:22;8939:61:8;7099:4;7122:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7122:16:8;:30;9010:58;;;;-1:-1:-1;;;9010:58:8;;17917:2:22;9010:58:8;;;17899:21:22;17956:2;17936:18;;;17929:30;17995;17975:18;;;17968:58;18043:18;;9010:58:8;17715:352:22;9010:58:8;9079:45;9108:1;9112:2;9116:7;9079:20;:45::i;:::-;-1:-1:-1;;;;;9135:13:8;;;;;;:9;:13;;;;;:18;;9152:1;;9135:13;:18;;9152:1;;9135:18;:::i;:::-;;;;-1:-1:-1;;9163:16:8;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9163:21:8;-1:-1:-1;;;;;9163:21:8;;;;;;;;9200:33;;9163:16;;;9200:33;;9163:16;;9200:33;2627:126:0;2302:457;:::o;2624:572:11:-;-1:-1:-1;;;;;2823:18:11;;2819:183;;2857:40;2889:7;4005:10;:17;;3978:24;;;;:15;:24;;;;;:44;;;4032:24;;;;;;;;;;;;3902:161;2857:40;2819:183;;;2926:2;-1:-1:-1;;;;;2918:10:11;:4;-1:-1:-1;;;;;2918:10:11;;2914:88;;2944:47;2977:4;2983:7;2944:32;:47::i;:::-;-1:-1:-1;;;;;3015:16:11;;3011:179;;3047:45;3084:7;3047:36;:45::i;3011:179::-;3119:4;-1:-1:-1;;;;;3113:10:11;:2;-1:-1:-1;;;;;3113:10:11;;3109:81;;3139:40;3167:2;3171:7;3139:27;:40::i;392:703:18:-;448:13;665:5;674:1;665:10;661:51;;-1:-1:-1;;691:10:18;;;;;;;;;;;;-1:-1:-1;;;691:10:18;;;;;392:703::o;661:51::-;736:5;721:12;775:75;782:9;;775:75;;807:8;;;;:::i;:::-;;-1:-1:-1;829:10:18;;-1:-1:-1;837:2:18;829:10;;:::i;:::-;;;775:75;;;859:19;891:6;881:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;881:17:18;;859:39;;908:150;915:10;;908:150;;941:11;951:1;941:11;;:::i;:::-;;-1:-1:-1;1009:10:18;1017:2;1009:5;:10;:::i;:::-;996:24;;:2;:24;:::i;:::-;983:39;;966:6;973;966:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;966:56:18;;;;;;;;-1:-1:-1;1036:11:18;1045:2;1036:11;;:::i;:::-;;;908:150;;4680:970:11;4942:22;4992:1;4967:22;4984:4;4967:16;:22::i;:::-;:26;;;;:::i;:::-;5003:18;5024:26;;;:17;:26;;;;;;4942:51;;-1:-1:-1;5154:28:11;;;5150:323;;-1:-1:-1;;;;;5220:18:11;;5198:19;5220:18;;;:12;:18;;;;;;;;:34;;;;;;;;;5269:30;;;;;;:44;;;5385:30;;:17;:30;;;;;:43;;;5150:323;-1:-1:-1;5566:26:11;;;;:17;:26;;;;;;;;5559:33;;;-1:-1:-1;;;;;5609:18:11;;;;;:12;:18;;;;;:34;;;;;;;5602:41;4680:970::o;5938:1061::-;6212:10;:17;6187:22;;6212:21;;6232:1;;6212:21;:::i;:::-;6243:18;6264:24;;;:15;:24;;;;;;6632:10;:26;;6187:46;;-1:-1:-1;6264:24:11;;6187:46;;6632:26;;;;;;:::i;:::-;;;;;;;;;6610:48;;6694:11;6669:10;6680;6669:22;;;;;;;;:::i;:::-;;;;;;;;;;;;:36;;;;6773:28;;;:15;:28;;;;;;;:41;;;6942:24;;;;;6935:31;6976:10;:16;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;6009:990;;;5938:1061;:::o;3490:217::-;3574:14;3591:20;3608:2;3591:16;:20::i;:::-;-1:-1:-1;;;;;3621:16:11;;;;;;;:12;:16;;;;;;;;:24;;;;;;;;:34;;;3665:26;;;:17;:26;;;;;;:35;;;;-1:-1:-1;3490:217:11:o;14:131:22:-;-1:-1:-1;;;;;;88:32:22;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:250::-;677:1;687:113;701:6;698:1;695:13;687:113;;;777:11;;;771:18;758:11;;;751:39;723:2;716:10;687:113;;;-1:-1:-1;;834:1:22;816:16;;809:27;592:250::o;847:271::-;889:3;927:5;921:12;954:6;949:3;942:19;970:76;1039:6;1032:4;1027:3;1023:14;1016:4;1009:5;1005:16;970:76;:::i;:::-;1100:2;1079:15;-1:-1:-1;;1075:29:22;1066:39;;;;1107:4;1062:50;;847:271;-1:-1:-1;;847:271:22:o;1123:220::-;1272:2;1261:9;1254:21;1235:4;1292:45;1333:2;1322:9;1318:18;1310:6;1292:45;:::i;1348:180::-;1407:6;1460:2;1448:9;1439:7;1435:23;1431:32;1428:52;;;1476:1;1473;1466:12;1428:52;-1:-1:-1;1499:23:22;;1348:180;-1:-1:-1;1348:180:22:o;1741:173::-;1809:20;;-1:-1:-1;;;;;1858:31:22;;1848:42;;1838:70;;1904:1;1901;1894:12;1838:70;1741:173;;;:::o;1919:254::-;1987:6;1995;2048:2;2036:9;2027:7;2023:23;2019:32;2016:52;;;2064:1;2061;2054:12;2016:52;2087:29;2106:9;2087:29;:::i;:::-;2077:39;2163:2;2148:18;;;;2135:32;;-1:-1:-1;;;1919:254:22:o;2360:328::-;2437:6;2445;2453;2506:2;2494:9;2485:7;2481:23;2477:32;2474:52;;;2522:1;2519;2512:12;2474:52;2545:29;2564:9;2545:29;:::i;:::-;2535:39;;2593:38;2627:2;2616:9;2612:18;2593:38;:::i;:::-;2583:48;;2678:2;2667:9;2663:18;2650:32;2640:42;;2360:328;;;;;:::o;2693:127::-;2754:10;2749:3;2745:20;2742:1;2735:31;2785:4;2782:1;2775:15;2809:4;2806:1;2799:15;2825:632;2890:5;2920:18;2961:2;2953:6;2950:14;2947:40;;;2967:18;;:::i;:::-;3042:2;3036:9;3010:2;3096:15;;-1:-1:-1;;3092:24:22;;;3118:2;3088:33;3084:42;3072:55;;;3142:18;;;3162:22;;;3139:46;3136:72;;;3188:18;;:::i;:::-;3228:10;3224:2;3217:22;3257:6;3248:15;;3287:6;3279;3272:22;3327:3;3318:6;3313:3;3309:16;3306:25;3303:45;;;3344:1;3341;3334:12;3303:45;3394:6;3389:3;3382:4;3374:6;3370:17;3357:44;3449:1;3442:4;3433:6;3425;3421:19;3417:30;3410:41;;;;2825:632;;;;;:::o;3462:451::-;3531:6;3584:2;3572:9;3563:7;3559:23;3555:32;3552:52;;;3600:1;3597;3590:12;3552:52;3640:9;3627:23;3673:18;3665:6;3662:30;3659:50;;;3705:1;3702;3695:12;3659:50;3728:22;;3781:4;3773:13;;3769:27;-1:-1:-1;3759:55:22;;3810:1;3807;3800:12;3759:55;3833:74;3899:7;3894:2;3881:16;3876:2;3872;3868:11;3833:74;:::i;3918:186::-;3977:6;4030:2;4018:9;4009:7;4005:23;4001:32;3998:52;;;4046:1;4043;4036:12;3998:52;4069:29;4088:9;4069:29;:::i;4109:347::-;4174:6;4182;4235:2;4223:9;4214:7;4210:23;4206:32;4203:52;;;4251:1;4248;4241:12;4203:52;4274:29;4293:9;4274:29;:::i;:::-;4264:39;;4353:2;4342:9;4338:18;4325:32;4400:5;4393:13;4386:21;4379:5;4376:32;4366:60;;4422:1;4419;4412:12;4366:60;4445:5;4435:15;;;4109:347;;;;;:::o;4461:667::-;4556:6;4564;4572;4580;4633:3;4621:9;4612:7;4608:23;4604:33;4601:53;;;4650:1;4647;4640:12;4601:53;4673:29;4692:9;4673:29;:::i;:::-;4663:39;;4721:38;4755:2;4744:9;4740:18;4721:38;:::i;:::-;4711:48;;4806:2;4795:9;4791:18;4778:32;4768:42;;4861:2;4850:9;4846:18;4833:32;4888:18;4880:6;4877:30;4874:50;;;4920:1;4917;4910:12;4874:50;4943:22;;4996:4;4988:13;;4984:27;-1:-1:-1;4974:55:22;;5025:1;5022;5015:12;4974:55;5048:74;5114:7;5109:2;5096:16;5091:2;5087;5083:11;5048:74;:::i;:::-;5038:84;;;4461:667;;;;;;;:::o;5133:260::-;5201:6;5209;5262:2;5250:9;5241:7;5237:23;5233:32;5230:52;;;5278:1;5275;5268:12;5230:52;5301:29;5320:9;5301:29;:::i;:::-;5291:39;;5349:38;5383:2;5372:9;5368:18;5349:38;:::i;:::-;5339:48;;5133:260;;;;;:::o;5398:380::-;5477:1;5473:12;;;;5520;;;5541:61;;5595:4;5587:6;5583:17;5573:27;;5541:61;5648:2;5640:6;5637:14;5617:18;5614:38;5611:161;;5694:10;5689:3;5685:20;5682:1;5675:31;5729:4;5726:1;5719:15;5757:4;5754:1;5747:15;5611:161;;5398:380;;;:::o;6616:127::-;6677:10;6672:3;6668:20;6665:1;6658:31;6708:4;6705:1;6698:15;6732:4;6729:1;6722:15;6748:168;6788:7;6854:1;6850;6846:6;6842:14;6839:1;6836:21;6831:1;6824:9;6817:17;6813:45;6810:71;;;6861:18;;:::i;:::-;-1:-1:-1;6901:9:22;;6748:168::o;8102:135::-;8141:3;8162:17;;;8159:43;;8182:18;;:::i;:::-;-1:-1:-1;8229:1:22;8218:13;;8102:135::o;8242:410::-;8444:2;8426:21;;;8483:2;8463:18;;;8456:30;8522:34;8517:2;8502:18;;8495:62;-1:-1:-1;;;8588:2:22;8573:18;;8566:44;8642:3;8627:19;;8242:410::o;10391:127::-;10452:10;10447:3;10443:20;10440:1;10433:31;10483:4;10480:1;10473:15;10507:4;10504:1;10497:15;10649:545;10751:2;10746:3;10743:11;10740:448;;;10787:1;10812:5;10808:2;10801:17;10857:4;10853:2;10843:19;10927:2;10915:10;10911:19;10908:1;10904:27;10898:4;10894:38;10963:4;10951:10;10948:20;10945:47;;;-1:-1:-1;10986:4:22;10945:47;11041:2;11036:3;11032:12;11029:1;11025:20;11019:4;11015:31;11005:41;;11096:82;11114:2;11107:5;11104:13;11096:82;;;11159:17;;;11140:1;11129:13;11096:82;;;11100:3;;;10649:545;;;:::o;11370:1352::-;11496:3;11490:10;11523:18;11515:6;11512:30;11509:56;;;11545:18;;:::i;:::-;11574:97;11664:6;11624:38;11656:4;11650:11;11624:38;:::i;:::-;11618:4;11574:97;:::i;:::-;11726:4;;11790:2;11779:14;;11807:1;11802:663;;;;12509:1;12526:6;12523:89;;;-1:-1:-1;12578:19:22;;;12572:26;12523:89;-1:-1:-1;;11327:1:22;11323:11;;;11319:24;11315:29;11305:40;11351:1;11347:11;;;11302:57;12625:81;;11772:944;;11802:663;10596:1;10589:14;;;10633:4;10620:18;;-1:-1:-1;;11838:20:22;;;11956:236;11970:7;11967:1;11964:14;11956:236;;;12059:19;;;12053:26;12038:42;;12151:27;;;;12119:1;12107:14;;;;11986:19;;11956:236;;;11960:3;12220:6;12211:7;12208:19;12205:201;;;12281:19;;;12275:26;-1:-1:-1;;12364:1:22;12360:14;;;12376:3;12356:24;12352:37;12348:42;12333:58;12318:74;;12205:201;-1:-1:-1;;;;;12452:1:22;12436:14;;;12432:22;12419:36;;-1:-1:-1;11370:1352:22:o;14708:128::-;14775:9;;;14796:11;;;14793:37;;;14810:18;;:::i;14841:125::-;14906:9;;;14927:10;;;14924:36;;;14940:18;;:::i;15686:414::-;15888:2;15870:21;;;15927:2;15907:18;;;15900:30;15966:34;15961:2;15946:18;;15939:62;-1:-1:-1;;;16032:2:22;16017:18;;16010:48;16090:3;16075:19;;15686:414::o;16105:496::-;16284:3;16322:6;16316:13;16338:66;16397:6;16392:3;16385:4;16377:6;16373:17;16338:66;:::i;:::-;16467:13;;16426:16;;;;16489:70;16467:13;16426:16;16536:4;16524:17;;16489:70;:::i;:::-;16575:20;;16105:496;-1:-1:-1;;;;16105:496:22:o;16606:489::-;-1:-1:-1;;;;;16875:15:22;;;16857:34;;16927:15;;16922:2;16907:18;;16900:43;16974:2;16959:18;;16952:34;;;17022:3;17017:2;17002:18;;16995:31;;;16800:4;;17043:46;;17069:19;;17061:6;17043:46;:::i;:::-;17035:54;16606:489;-1:-1:-1;;;;;;16606:489:22:o;17100:249::-;17169:6;17222:2;17210:9;17201:7;17197:23;17193:32;17190:52;;;17238:1;17235;17228:12;17190:52;17270:9;17264:16;17289:30;17313:5;17289:30;:::i;18072:127::-;18133:10;18128:3;18124:20;18121:1;18114:31;18164:4;18161:1;18154:15;18188:4;18185:1;18178:15;18204:120;18244:1;18270;18260:35;;18275:18;;:::i;:::-;-1:-1:-1;18309:9:22;;18204:120::o;18329:112::-;18361:1;18387;18377:35;;18392:18;;:::i;:::-;-1:-1:-1;18426:9:22;;18329:112::o;18446:127::-;18507:10;18502:3;18498:20;18495:1;18488:31;18538:4;18535:1;18528:15;18562:4;18559:1;18552:15",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "MAX_PER_TXN()": "51b96d92",
    "MAX_SUPPLY()": "32cb6b0c",
    "MINT_PRICE()": "c002d23d",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "baseTokenURI()": "d547cfb7",
    "getApproved(uint256)": "081812fc",
    "isApprovedForAll(address,address)": "e985e9c5",
    "mintItem()": "eb93406b",
    "mintItem(uint256)": "17fb8594",
    "name()": "06fdde03",
    "owner()": "8da5cb5b",
    "ownerOf(uint256)": "6352211e",
    "renounceOwnership()": "715018a6",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setApprovalForAll(address,bool)": "a22cb465",
    "setBaseURI(string)": "55f804b3",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "tokenByIndex(uint256)": "4f6ccce7",
    "tokenIdCounter()": "98bdf6f5",
    "tokenOfOwnerByIndex(address,uint256)": "2f745c59",
    "tokenURI(uint256)": "c87b56dd",
    "totalSupply()": "18160ddd",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferOwnership(address)": "f2fde38b",
    "withdraw()": "3ccfd60b"
  },
  "ast": {
    "absolutePath": "contracts/ArcadeGamesNFT.sol",
    "id": 257,
    "exportedSymbols": {
      "Address": [
        23771
      ],
      "ArcadeGamesNFT": [
        256
      ],
      "Context": [
        23793
      ],
      "ERC165": [
        24043
      ],
      "ERC721": [
        22794
      ],
      "ERC721Enumerable": [
        23266
      ],
      "ERC721URIStorage": [
        23391
      ],
      "IERC165": [
        24055
      ],
      "IERC721": [
        22910
      ],
      "IERC721Enumerable": [
        23422
      ],
      "IERC721Metadata": [
        23449
      ],
      "IERC721Receiver": [
        22928
      ],
      "Ownable": [
        21927
      ],
      "Strings": [
        24019
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:4567:0",
    "nodes": [
      {
        "id": 1,
        "nodeType": "PragmaDirective",
        "src": "32:24:0",
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 2,
        "nodeType": "ImportDirective",
        "src": "58:57:0",
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 257,
        "sourceUnit": 22795,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3,
        "nodeType": "ImportDirective",
        "src": "116:78:0",
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
        "file": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 257,
        "sourceUnit": 23267,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 4,
        "nodeType": "ImportDirective",
        "src": "195:78:0",
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
        "file": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 257,
        "sourceUnit": 23392,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 5,
        "nodeType": "ImportDirective",
        "src": "274:52:0",
        "absolutePath": "node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 257,
        "sourceUnit": 21928,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 256,
        "nodeType": "ContractDefinition",
        "src": "872:3726:0",
        "nodes": [
          {
            "id": 17,
            "nodeType": "VariableDeclaration",
            "src": "1023:33:0",
            "constant": false,
            "functionSelector": "98bdf6f5",
            "mutability": "mutable",
            "name": "tokenIdCounter",
            "nameLocation": "1038:14:0",
            "scope": 256,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 15,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1023:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 16,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1055:1:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "id": 20,
            "nodeType": "VariableDeclaration",
            "src": "1107:47:0",
            "constant": true,
            "functionSelector": "c002d23d",
            "mutability": "constant",
            "name": "MINT_PRICE",
            "nameLocation": "1131:10:0",
            "scope": 256,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 18,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1107:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "302e3031",
              "id": 19,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1144:10:0",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000000000000000_by_1",
                "typeString": "int_const 10000000000000000"
              },
              "value": "0.01"
            },
            "visibility": "public"
          },
          {
            "id": 23,
            "nodeType": "VariableDeclaration",
            "src": "1173:40:0",
            "constant": true,
            "functionSelector": "32cb6b0c",
            "mutability": "constant",
            "name": "MAX_SUPPLY",
            "nameLocation": "1197:10:0",
            "scope": 256,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 21,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1173:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "313030",
              "id": 22,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1210:3:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100_by_1",
                "typeString": "int_const 100"
              },
              "value": "100"
            },
            "visibility": "public"
          },
          {
            "id": 26,
            "nodeType": "VariableDeclaration",
            "src": "1236:39:0",
            "constant": true,
            "functionSelector": "51b96d92",
            "mutability": "constant",
            "name": "MAX_PER_TXN",
            "nameLocation": "1260:11:0",
            "scope": 256,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 24,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1236:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "35",
              "id": 25,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1274:1:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_5_by_1",
                "typeString": "int_const 5"
              },
              "value": "5"
            },
            "visibility": "public"
          },
          {
            "id": 29,
            "nodeType": "VariableDeclaration",
            "src": "1330:84:0",
            "constant": false,
            "functionSelector": "d547cfb7",
            "mutability": "mutable",
            "name": "baseTokenURI",
            "nameLocation": "1344:12:0",
            "scope": 256,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 27,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1330:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "697066733a2f2f516d54596e54365a436139476b653669456831517159675862625354344354654b48626f55525a37565955373941",
              "id": 28,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1359:55:0",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_d7fe88510841af196c36aab8f895f884e14f9f3ec7b37885d47e1b115d3c200d",
                "typeString": "literal_string \"ipfs://QmTYnT6ZCa9Gke6iEh1QqYgXbbST4CTeKHboURZ7VYU79A\""
              },
              "value": "ipfs://QmTYnT6ZCa9Gke6iEh1QqYgXbbST4CTeKHboURZ7VYU79A"
            },
            "visibility": "public"
          },
          {
            "id": 46,
            "nodeType": "ModifierDefinition",
            "src": "1595:129:0",
            "body": {
              "id": 45,
              "nodeType": "Block",
              "src": "1630:94:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 40,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 35,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1648:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 36,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1652:5:0",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "1648:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 39,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 37,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32,
                            "src": "1661:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 38,
                            "name": "MINT_PRICE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20,
                            "src": "1671:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1661:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1648:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f756768204554482073656e7421",
                        "id": 41,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1683:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f820ff5160a7417576487960f075cfa07219ad7708f4a2273dfd730f317d69c5",
                          "typeString": "literal_string \"Not enough ETH sent!\""
                        },
                        "value": "Not enough ETH sent!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f820ff5160a7417576487960f075cfa07219ad7708f4a2273dfd730f317d69c5",
                          "typeString": "literal_string \"Not enough ETH sent!\""
                        }
                      ],
                      "id": 34,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1640:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 42,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1640:66:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43,
                  "nodeType": "ExpressionStatement",
                  "src": "1640:66:0"
                },
                {
                  "id": 44,
                  "nodeType": "PlaceholderStatement",
                  "src": "1716:1:0"
                }
              ]
            },
            "documentation": {
              "id": 30,
              "nodeType": "StructuredDocumentation",
              "src": "1503:87:0",
              "text": " @notice Based on Mint Price it checks that enough ETH has been sent."
            },
            "name": "minValue",
            "nameLocation": "1604:8:0",
            "parameters": {
              "id": 33,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1621:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 46,
                  "src": "1613:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1613:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1612:17:0"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 54,
            "nodeType": "FunctionDefinition",
            "src": "1775:47:0",
            "body": {
              "id": 53,
              "nodeType": "Block",
              "src": "1820:2:0",
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "4172636164652047616d6573",
                    "id": 49,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1796:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_a89b56c2a676147768024654c40152938fe8a8f2c1c49738d88051aec6080b43",
                      "typeString": "literal_string \"Arcade Games\""
                    },
                    "value": "Arcade Games"
                  },
                  {
                    "hexValue": "41524347",
                    "id": 50,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1812:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_47b142b32f2e789aad20ff1f8ffb1c74aee100388c5b41967769c059bfe9a29d",
                      "typeString": "literal_string \"ARCG\""
                    },
                    "value": "ARCG"
                  }
                ],
                "id": 51,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 48,
                  "name": "ERC721",
                  "nameLocations": [
                    "1789:6:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 22794,
                  "src": "1789:6:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1789:30:0"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 47,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1786:2:0"
            },
            "returnParameters": {
              "id": 52,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1820:0:0"
            },
            "scope": 256,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 63,
            "nodeType": "FunctionDefinition",
            "src": "1943:63:0",
            "body": {
              "id": 62,
              "nodeType": "Block",
              "src": "1978:28:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 59,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1997:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 58,
                      "name": "mintItem",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        63,
                        116
                      ],
                      "referencedDeclaration": 116,
                      "src": "1988:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 60,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1988:11:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61,
                  "nodeType": "ExpressionStatement",
                  "src": "1988:11:0"
                }
              ]
            },
            "documentation": {
              "id": 55,
              "nodeType": "StructuredDocumentation",
              "src": "1875:63:0",
              "text": " @notice mints token using function overload."
            },
            "functionSelector": "eb93406b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintItem",
            "nameLocation": "1952:8:0",
            "parameters": {
              "id": 56,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1960:2:0"
            },
            "returnParameters": {
              "id": 57,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1978:0:0"
            },
            "scope": 256,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 116,
            "nodeType": "FunctionDefinition",
            "src": "2302:457:0",
            "body": {
              "id": 115,
              "nodeType": "Block",
              "src": "2352:407:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 75,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 70,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2370:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 71,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2374:5:0",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "2370:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 74,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 72,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66,
                            "src": "2383:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 73,
                            "name": "MINT_PRICE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20,
                            "src": "2393:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2383:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2370:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f756768204554482073656e7421",
                        "id": 76,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2405:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f820ff5160a7417576487960f075cfa07219ad7708f4a2273dfd730f317d69c5",
                          "typeString": "literal_string \"Not enough ETH sent!\""
                        },
                        "value": "Not enough ETH sent!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f820ff5160a7417576487960f075cfa07219ad7708f4a2273dfd730f317d69c5",
                          "typeString": "literal_string \"Not enough ETH sent!\""
                        }
                      ],
                      "id": 69,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2362:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 77,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2362:66:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78,
                  "nodeType": "ExpressionStatement",
                  "src": "2362:66:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 83,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 80,
                            "name": "totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23017,
                            "src": "2446:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 81,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2446:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 82,
                          "name": "MAX_SUPPLY",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23,
                          "src": "2462:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2446:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d6178696d756d20737570706c79206f662031303020686173206265656e2072656163686564",
                        "id": 84,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2474:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8701b9709d0856e4b62866abe494e2e49aa20d9990549e471930e37aa8dd8d82",
                          "typeString": "literal_string \"Maximum supply of 100 has been reached\""
                        },
                        "value": "Maximum supply of 100 has been reached"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8701b9709d0856e4b62866abe494e2e49aa20d9990549e471930e37aa8dd8d82",
                          "typeString": "literal_string \"Maximum supply of 100 has been reached\""
                        }
                      ],
                      "id": 79,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2438:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 85,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2438:77:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86,
                  "nodeType": "ExpressionStatement",
                  "src": "2438:77:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 90,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 88,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66,
                          "src": "2533:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 89,
                          "name": "MAX_PER_TXN",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26,
                          "src": "2544:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2533:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752063616e6e6f74206d696e74206d6f7265207468616e2035204e46547320696e20612073696e676c65207472616e73616374696f6e",
                        "id": 91,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2557:58:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8d3e3c506492431a54c55993f365ba3924094c0a1726efd3a5d8f96776c78c0f",
                          "typeString": "literal_string \"You cannot mint more than 5 NFTs in a single transaction\""
                        },
                        "value": "You cannot mint more than 5 NFTs in a single transaction"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8d3e3c506492431a54c55993f365ba3924094c0a1726efd3a5d8f96776c78c0f",
                          "typeString": "literal_string \"You cannot mint more than 5 NFTs in a single transaction\""
                        }
                      ],
                      "id": 87,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2525:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 92,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2525:91:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 93,
                  "nodeType": "ExpressionStatement",
                  "src": "2525:91:0"
                },
                {
                  "body": {
                    "id": 113,
                    "nodeType": "Block",
                    "src": "2661:92:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 105,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "2675:16:0",
                          "subExpression": {
                            "id": 104,
                            "name": "tokenIdCounter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17,
                            "src": "2675:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 106,
                        "nodeType": "ExpressionStatement",
                        "src": "2675:16:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 108,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2715:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 109,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2719:6:0",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2715:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 110,
                              "name": "tokenIdCounter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17,
                              "src": "2727:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 107,
                            "name": "_safeMint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              22409,
                              22438
                            ],
                            "referencedDeclaration": 22409,
                            "src": "2705:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2705:37:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 112,
                        "nodeType": "ExpressionStatement",
                        "src": "2705:37:0"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 98,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 95,
                      "src": "2644:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 99,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66,
                      "src": "2648:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2644:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 114,
                  "initializationExpression": {
                    "assignments": [
                      95
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 95,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2639:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 114,
                        "src": "2631:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 94,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2631:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 97,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 96,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2641:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2631:11:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 102,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2657:3:0",
                      "subExpression": {
                        "id": 101,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 95,
                        "src": "2657:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 103,
                    "nodeType": "ExpressionStatement",
                    "src": "2657:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "2627:126:0"
                }
              ]
            },
            "documentation": {
              "id": 64,
              "nodeType": "StructuredDocumentation",
              "src": "2012:285:0",
              "text": " @notice mints the amount of token requested by iterating parent _safeMint function. Checks that max amount of tokens per txn, max tokens supply and mint price are correct. ID counter is increased each minted token.\n @param _amount amount of tokens to be minted"
            },
            "functionSelector": "17fb8594",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintItem",
            "nameLocation": "2311:8:0",
            "parameters": {
              "id": 67,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2328:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 116,
                  "src": "2320:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 65,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2320:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2319:17:0"
            },
            "returnParameters": {
              "id": 68,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2352:0:0"
            },
            "scope": 256,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 160,
            "nodeType": "FunctionDefinition",
            "src": "2875:313:0",
            "body": {
              "id": 159,
              "nodeType": "Block",
              "src": "2948:240:0",
              "statements": [
                {
                  "assignments": [
                    123
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 123,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "2963:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 159,
                      "src": "2958:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 122,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2958:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 129,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 126,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "2981:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ArcadeGamesNFT_$256",
                            "typeString": "contract ArcadeGamesNFT"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ArcadeGamesNFT_$256",
                            "typeString": "contract ArcadeGamesNFT"
                          }
                        ],
                        "id": 125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2973:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 124,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2973:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 127,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2973:13:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "2987:7:0",
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "2973:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2958:36:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 131,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 123,
                          "src": "3012:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 132,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3022:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3012:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f206574686572206c65667420746f207769746864726177",
                        "id": 134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3025:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8e214158120ebd8c8a9dbfabb2b09bc322daaaa67b6aff20f1d19ed640c12c58",
                          "typeString": "literal_string \"No ether left to withdraw\""
                        },
                        "value": "No ether left to withdraw"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8e214158120ebd8c8a9dbfabb2b09bc322daaaa67b6aff20f1d19ed640c12c58",
                          "typeString": "literal_string \"No ether left to withdraw\""
                        }
                      ],
                      "id": 130,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3004:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3004:49:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 136,
                  "nodeType": "ExpressionStatement",
                  "src": "3004:49:0"
                },
                {
                  "assignments": [
                    138,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 138,
                      "mutability": "mutable",
                      "name": "sent",
                      "nameLocation": "3070:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 159,
                      "src": "3065:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 137,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3065:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 153,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3135:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 141,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3088:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 142,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3092:6:0",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3088:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 140,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3080:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 139,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3080:8:0",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3080:19:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3100:4:0",
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "3080:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 150,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 147,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "3120:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ArcadeGamesNFT_$256",
                                  "typeString": "contract ArcadeGamesNFT"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ArcadeGamesNFT_$256",
                                  "typeString": "contract ArcadeGamesNFT"
                                }
                              ],
                              "id": 146,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3112:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 145,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3112:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 148,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3112:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3126:7:0",
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "3112:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "3080:54:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3080:58:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3064:74:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 155,
                        "name": "sent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 138,
                        "src": "3156:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e73666572206661696c65642e",
                        "id": 156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3162:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c81948f77ae7b56f1759fc612b6b373d090eebe7124f74c528fff8e0a139fe69",
                          "typeString": "literal_string \"Transfer failed.\""
                        },
                        "value": "Transfer failed."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c81948f77ae7b56f1759fc612b6b373d090eebe7124f74c528fff8e0a139fe69",
                          "typeString": "literal_string \"Transfer failed.\""
                        }
                      ],
                      "id": 154,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3148:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3148:33:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 158,
                  "nodeType": "ExpressionStatement",
                  "src": "3148:33:0"
                }
              ]
            },
            "documentation": {
              "id": 117,
              "nodeType": "StructuredDocumentation",
              "src": "2765:105:0",
              "text": " @notice transfers all the funds collected to owner address. Only owner can invoke this"
            },
            "functionSelector": "3ccfd60b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 120,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 119,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "2934:9:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21846,
                  "src": "2934:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2934:9:0"
              }
            ],
            "name": "withdraw",
            "nameLocation": "2884:8:0",
            "parameters": {
              "id": 118,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2892:2:0"
            },
            "returnParameters": {
              "id": 121,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2948:0:0"
            },
            "scope": 256,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 173,
            "nodeType": "FunctionDefinition",
            "src": "3298:111:0",
            "body": {
              "id": 172,
              "nodeType": "Block",
              "src": "3364:45:0",
              "statements": [
                {
                  "expression": {
                    "id": 170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 168,
                      "name": "baseTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "3374:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 169,
                      "name": "_baseTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 163,
                      "src": "3389:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3374:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 171,
                  "nodeType": "ExpressionStatement",
                  "src": "3374:28:0"
                }
              ]
            },
            "documentation": {
              "id": 161,
              "nodeType": "StructuredDocumentation",
              "src": "3194:99:0",
              "text": " @notice Set baseTokenURI state variable.\n @param _baseTokenURI URI address"
            },
            "functionSelector": "55f804b3",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 166,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 165,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3354:9:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21846,
                  "src": "3354:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "3354:9:0"
              }
            ],
            "name": "setBaseURI",
            "nameLocation": "3307:10:0",
            "parameters": {
              "id": 164,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 163,
                  "mutability": "mutable",
                  "name": "_baseTokenURI",
                  "nameLocation": "3332:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 173,
                  "src": "3318:27:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 162,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3318:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3317:29:0"
            },
            "returnParameters": {
              "id": 167,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3364:0:0"
            },
            "scope": 256,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 183,
            "nodeType": "FunctionDefinition",
            "src": "3477:111:0",
            "body": {
              "id": 182,
              "nodeType": "Block",
              "src": "3552:36:0",
              "statements": [
                {
                  "expression": {
                    "id": 180,
                    "name": "baseTokenURI",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 29,
                    "src": "3569:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 179,
                  "id": 181,
                  "nodeType": "Return",
                  "src": "3562:19:0"
                }
              ]
            },
            "baseFunctions": [
              22141
            ],
            "documentation": {
              "id": 174,
              "nodeType": "StructuredDocumentation",
              "src": "3415:57:0",
              "text": " @notice override required by Solidity."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_baseURI",
            "nameLocation": "3486:8:0",
            "overrides": {
              "id": 176,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3519:8:0"
            },
            "parameters": {
              "id": 175,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3494:2:0"
            },
            "returnParameters": {
              "id": 179,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 178,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 183,
                  "src": "3537:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 177,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3537:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3536:15:0"
            },
            "scope": 256,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 205,
            "nodeType": "FunctionDefinition",
            "src": "3656:209:0",
            "body": {
              "id": 204,
              "nodeType": "Block",
              "src": "3803:62:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 199,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 186,
                        "src": "3840:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 200,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 188,
                        "src": "3846:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 201,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 190,
                        "src": "3850:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 196,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "3813:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ArcadeGamesNFT_$256_$",
                          "typeString": "type(contract super ArcadeGamesNFT)"
                        }
                      },
                      "id": 198,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3819:20:0",
                      "memberName": "_beforeTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23104,
                      "src": "3813:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3813:45:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 203,
                  "nodeType": "ExpressionStatement",
                  "src": "3813:45:0"
                }
              ]
            },
            "baseFunctions": [
              22782,
              23104
            ],
            "documentation": {
              "id": 184,
              "nodeType": "StructuredDocumentation",
              "src": "3594:57:0",
              "text": " @notice override required by Solidity."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "3665:20:0",
            "overrides": {
              "id": 194,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 192,
                  "name": "ERC721",
                  "nameLocations": [
                    "3777:6:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 22794,
                  "src": "3777:6:0"
                },
                {
                  "id": 193,
                  "name": "ERC721Enumerable",
                  "nameLocations": [
                    "3785:16:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 23266,
                  "src": "3785:16:0"
                }
              ],
              "src": "3768:34:0"
            },
            "parameters": {
              "id": 191,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 186,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "3703:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 205,
                  "src": "3695:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 185,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3695:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 188,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3725:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 205,
                  "src": "3717:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 187,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3717:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 190,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3745:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 205,
                  "src": "3737:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 189,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3737:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3685:73:0"
            },
            "returnParameters": {
              "id": 195,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3803:0:0"
            },
            "scope": 256,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 221,
            "nodeType": "FunctionDefinition",
            "src": "3933:133:0",
            "body": {
              "id": 220,
              "nodeType": "Block",
              "src": "4029:37:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 217,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 208,
                        "src": "4051:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 214,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "4039:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ArcadeGamesNFT_$256_$",
                          "typeString": "type(contract super ArcadeGamesNFT)"
                        }
                      },
                      "id": 216,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4045:5:0",
                      "memberName": "_burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23390,
                      "src": "4039:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4039:20:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 219,
                  "nodeType": "ExpressionStatement",
                  "src": "4039:20:0"
                }
              ]
            },
            "baseFunctions": [
              22564,
              23390
            ],
            "documentation": {
              "id": 206,
              "nodeType": "StructuredDocumentation",
              "src": "3871:57:0",
              "text": " @notice override required by Solidity."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "3942:5:0",
            "overrides": {
              "id": 212,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 210,
                  "name": "ERC721",
                  "nameLocations": [
                    "3999:6:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 22794,
                  "src": "3999:6:0"
                },
                {
                  "id": 211,
                  "name": "ERC721URIStorage",
                  "nameLocations": [
                    "4007:16:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 23391,
                  "src": "4007:16:0"
                }
              ],
              "src": "3990:34:0"
            },
            "parameters": {
              "id": 209,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 208,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3956:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 221,
                  "src": "3948:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 207,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3948:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3947:17:0"
            },
            "returnParameters": {
              "id": 213,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4029:0:0"
            },
            "scope": 256,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 238,
            "nodeType": "FunctionDefinition",
            "src": "4134:189:0",
            "body": {
              "id": 237,
              "nodeType": "Block",
              "src": "4276:47:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 234,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 224,
                        "src": "4308:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 232,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "4293:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ArcadeGamesNFT_$256_$",
                          "typeString": "type(contract super ArcadeGamesNFT)"
                        }
                      },
                      "id": 233,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4299:8:0",
                      "memberName": "tokenURI",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23338,
                      "src": "4293:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (uint256) view returns (string memory)"
                      }
                    },
                    "id": 235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4293:23:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 231,
                  "id": 236,
                  "nodeType": "Return",
                  "src": "4286:30:0"
                }
              ]
            },
            "baseFunctions": [
              22132,
              23338
            ],
            "documentation": {
              "id": 222,
              "nodeType": "StructuredDocumentation",
              "src": "4072:57:0",
              "text": " @notice override required by Solidity."
            },
            "functionSelector": "c87b56dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "4143:8:0",
            "overrides": {
              "id": 228,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 226,
                  "name": "ERC721",
                  "nameLocations": [
                    "4214:6:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 22794,
                  "src": "4214:6:0"
                },
                {
                  "id": 227,
                  "name": "ERC721URIStorage",
                  "nameLocations": [
                    "4222:16:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 23391,
                  "src": "4222:16:0"
                }
              ],
              "src": "4205:34:0"
            },
            "parameters": {
              "id": 225,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 224,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "4160:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 238,
                  "src": "4152:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 223,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4152:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4151:17:0"
            },
            "returnParameters": {
              "id": 231,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 230,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 238,
                  "src": "4257:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 229,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4257:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4256:15:0"
            },
            "scope": 256,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 255,
            "nodeType": "FunctionDefinition",
            "src": "4391:205:0",
            "body": {
              "id": 254,
              "nodeType": "Block",
              "src": "4536:60:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 251,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 241,
                        "src": "4577:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 249,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "4553:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ArcadeGamesNFT_$256_$",
                          "typeString": "type(contract super ArcadeGamesNFT)"
                        }
                      },
                      "id": 250,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4559:17:0",
                      "memberName": "supportsInterface",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22978,
                      "src": "4553:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                        "typeString": "function (bytes4) view returns (bool)"
                      }
                    },
                    "id": 252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4553:36:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 248,
                  "id": 253,
                  "nodeType": "Return",
                  "src": "4546:43:0"
                }
              ]
            },
            "baseFunctions": [
              22021,
              22978
            ],
            "documentation": {
              "id": 239,
              "nodeType": "StructuredDocumentation",
              "src": "4329:57:0",
              "text": " @notice override required by Solidity."
            },
            "functionSelector": "01ffc9a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "4400:17:0",
            "overrides": {
              "id": 245,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 243,
                  "name": "ERC721",
                  "nameLocations": [
                    "4483:6:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 22794,
                  "src": "4483:6:0"
                },
                {
                  "id": 244,
                  "name": "ERC721Enumerable",
                  "nameLocations": [
                    "4491:16:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 23266,
                  "src": "4491:16:0"
                }
              ],
              "src": "4474:34:0"
            },
            "parameters": {
              "id": 242,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 241,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "4425:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 255,
                  "src": "4418:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 240,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "4418:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4417:20:0"
            },
            "returnParameters": {
              "id": 248,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 247,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 255,
                  "src": "4526:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 246,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4526:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4525:6:0"
            },
            "scope": 256,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 7,
              "name": "ERC721",
              "nameLocations": [
                "903:6:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 22794,
              "src": "903:6:0"
            },
            "id": 8,
            "nodeType": "InheritanceSpecifier",
            "src": "903:6:0"
          },
          {
            "baseName": {
              "id": 9,
              "name": "ERC721Enumerable",
              "nameLocations": [
                "915:16:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 23266,
              "src": "915:16:0"
            },
            "id": 10,
            "nodeType": "InheritanceSpecifier",
            "src": "915:16:0"
          },
          {
            "baseName": {
              "id": 11,
              "name": "ERC721URIStorage",
              "nameLocations": [
                "937:16:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 23391,
              "src": "937:16:0"
            },
            "id": 12,
            "nodeType": "InheritanceSpecifier",
            "src": "937:16:0"
          },
          {
            "baseName": {
              "id": 13,
              "name": "Ownable",
              "nameLocations": [
                "959:7:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 21927,
              "src": "959:7:0"
            },
            "id": 14,
            "nodeType": "InheritanceSpecifier",
            "src": "959:7:0"
          }
        ],
        "canonicalName": "ArcadeGamesNFT",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 6,
          "nodeType": "StructuredDocumentation",
          "src": "673:198:0",
          "text": " @title Arcade Games NFT\n @author patricius\n @notice An NFT collection of covers of the 100 best Arcade Games ever\n @dev A standard ERC721 implementation. Artworks are stored on IPFS"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          256,
          21927,
          23391,
          23266,
          23422,
          22794,
          23449,
          22910,
          24043,
          24055,
          23793
        ],
        "name": "ArcadeGamesNFT",
        "nameLocation": "881:14:0",
        "scope": 257,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 0
}